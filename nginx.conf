# Nginx configuration for cert-portal
# Place this file in /etc/nginx/sites-available/cert-portal
# Then symlink: ln -s /etc/nginx/sites-available/cert-portal /etc/nginx/sites-enabled/

# HTTPS Server Block (uncomment and configure if using SSL)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;  # Replace with your domain
#
#     # SSL Certificate paths
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers off;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
# }

server {
    listen 80;
    server_name certchecker.unam.edu.na;  # Your domain

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logging
    access_log /var/log/nginx/cert-portal.access.log;
    error_log /var/log/nginx/cert-portal.error.log;

    # Client body size limit (for file uploads)
    client_max_body_size 10M;

    # Proxy timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Static files (served directly by nginx)
    location /public/ {
        alias /var/www/cert-portal/public/;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # Certificate downloads
    location /certificates/ {
        alias /var/www/cert-portal/certificates/;
        add_header Content-Disposition "attachment";
    }

    # Node.js application
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Forward real IP
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Session affinity
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_buffering off;
    }

    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://localhost:3000/health;
    }
}